@use "sass:math";
/*
* Add btn sizes small,medium and big
* Provide animation and transtion on hover,focus-visible and active state
*
*
*/

// some animation variable
$transition-duration: 500ms;
$opacity-duration: math.div($transition-duration, 2);

.btn {
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--br, 0.75rem);
  background: var(--bg, var(--clr-primary));
  box-shadow: 0 4px 4px var(--bs, var(--clr-primary-400));
  transition: scale 500ms ease-in-out;
  &:is(:hover, :focus-visible) {
    scale: 1.005;
    box-shadow: 0 4px 4px var(--hbs, var(--clr-tertiary-400));
  }
  // btn sizes .btn-s, .btn-m, .btn-l
  &-s {
    padding-inline: var(--px, 1em);
    height: 2.5rem;
  }

  &-m {
    padding-inline: var(--px, 1.5rem);
    height: 3rem;
  }
  &-l {
    padding-inline: var(--px, 2rem);
    height: 4rem;
  }

  &__sign-in {
    &__google {
      --bg: var(--clr-ash);
      width: 25rem;
      box-shadow: 0 4px 4px var(--clr-dark-100);
      padding-left: 0.75rem;

      .icon__google {
        --size: 1.25rem;
        width: var(--size);
        height: var(--size);
        margin-inline-end: 0.75rem;

        svg {
          height: var(--size);
        }
      }
      &:is(:hover, :focus-visible) {
        box-shadow: 0 4px 4px var(--clr-ash-100);
      }
    }
  }
  &__active-effect {
    --flow-gap: 3rem;

    // width: 400px
    --bs: var(--clr-dark-100);
    width: 25rem;
    // box-shadow: 0px 4px 4px var(--clr-dark-100);
    transition: background $transition-duration;

    position: relative;
    isolation: isolate;
    overflow: hidden;

    &::before {
      content: "";
      width: 10%;
      margin: auto;
      border-radius: 50%;
      aspect-ratio: 1;
      opacity: 0;
      position: absolute;
      inset: 0;
      z-index: -1;
      background: var(--clr-primary-800);

      transition: scale $transition-duration math.div($opacity-duration, 1.5),
        opacity $opacity-duration;
    }

    &:active::before {
      scale: 20;
      opacity: 1;
    }
    &:is(:hover, :focus-visible) {
      box-shadow: 0 4px 4px var(--clr-primary-400);
    }

    > span {
      z-index: -1;
      width: calc(100% / 3);
      height: 100%;
      background: transparent;
      position: absolute;
    }

    > :first-child {
      left: 0;
      top: 0;
    }
    &:has(:first-child:active)::before {
      margin-left: 0;
      transition: scale math.div($transition-duration, 2),
        opacity math.div($opacity-duration, 2);
    }

    > :last-child {
      --flow-gap: none;

      right: 0;
      top: 0;
    }

    &:has(:last-child:active)::before {
      margin-right: 0;
      transition: scale math.div($transition-duration, 2),
        opacity math.div($opacity-duration, 2);
    }
  }
}
