@use "../abstracts/layout-scale" as *;
@use "../abstracts/mixins" as *;

/*
* change the name of col-12 to grid-layout or something fancy
* make grid responsive with 8 columns for tablet and 4 columns for mobile
* make container more useful
*/
.container {
  // --cpx: 0;
  margin-inline: auto;
  // padding-inline: var(--container-padding-x);
  width: 100%;
  padding-inline: var(--cpx, 0.75rem);
  padding-block: var(--cpy, 6rem);
  @include mediaquery(s) {
    padding-block: var(--cpy, 6rem);
    padding-inline: var(--cpx, 1rem);
  }
  @include mediaquery(m) {
    padding-block: var(--cpy, 4.5rem);
    padding-inline: unset;
    max-width: 45rem;
  }
  @include mediaquery(l) {
    padding-block: var(--cpy, 5.25rem);
    padding-inline: unset;
    max-width: 52.5rem;
  }
  @include mediaquery(xl) {
    padding-block: var(--cpy, 6.25rem);
    padding-inline: unset;
    max-width: 62.5rem;
  }
}

.col-12 {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 20px;
}
.grid-container {
  &__signup {
    display: grid;
    place-items: center;
    padding-inline: 1rem;
    row-gap: var(--container-row-gap, 2rem);
    column-gap: var(--container-column-gap, 2rem);

    @include mediaquery(s) {
      grid-template-columns:
        var(--conter-left-size, minmax(1fr, 30rem))
        var(--conter-right-size, minmax(1.5fr, 45rem));
    }
  }

  &__signin {
    display: grid;
    place-items: center;
    max-width: 90rem;
    margin-inline: auto;
    row-gap: var(--container-row-gap, 2rem);
    column-gap: var(--container-column-gap, 2rem);

    @include mediaquery(s) {
      grid-template-columns:
        var(--conter-right-size, minmax(1fr, 47.25rem))
        var(--conter-left-size, minmax(1fr, 42.75rem));
    }
  }
}
